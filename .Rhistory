bars <- ggplot(dat, aes(fill=county.name, height=.5, width=.5)) +
geom_tile(aes(x=dat$Pop, y="Population"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Median Home Income"), stat="identity") +
geom_tile(aes(x=dat$pov.rate, y="Poverty Rate"), stat="identity") +
geom_tile(aes(x=dat$Pop, y="Zilow"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Poqeru"), stat="identity") +
geom_hline(yintercept=c(4.5,3.5,2.5,1.5)) +
facet_grid(~1:5) +
theme(legend.position = "top",
strip.background = element_blank())
bars
bars <- ggplot(dat, aes(fill=county.name, height=.5, width=.5)) +
geom_tile(aes(x=dat$Pop, y="Population"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Median Home Income"), stat="identity") +
geom_tile(aes(x=dat$pov.rate, y="Poverty Rate"), stat="identity") +
geom_tile(aes(x=dat$Pop, y="Zilow"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Poqeru"), stat="identity") +
geom_hline(yintercept=c(4.5,3.5,2.5,1.5)) +
facet_grid(~1:4) +
theme(legend.position = "top",
strip.background = element_blank())
bars
bars <- ggplot(dat, aes(fill=county.name, height=.5, width=.5)) +
geom_tile(aes(x=dat$Pop, y="Population"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Median Home Income"), stat="identity") +
geom_tile(aes(x=dat$pov.rate, y="Poverty Rate"), stat="identity") +
geom_tile(aes(x=dat$Pop, y="Zilow"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Poqeru"), stat="identity") +
geom_hline(yintercept=c(4.5,3.5,2.5,1.5)) +
facet_grid(~1:5) +
theme(legend.position = "top",
strip.background = element_blank())
bars
bars <- ggplot(dat, aes(fill=county.name, height=.5, width=.5)) +
geom_tile(aes(x=dat$Pop, y="Population"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Median Home Income"), stat="identity") +
geom_tile(aes(x=dat$pov.rate, y="Poverty Rate"), stat="identity") +
geom_tile(aes(x=dat$Pop, y="Zilow"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Poqeru"), stat="identity") +
geom_hline(yintercept=c(4.5,3.5,2.5,1.5)) +
facet_grid(~Pop) +
theme(legend.position = "top",
strip.background = element_blank())
bars
dat$facet <- 1:5
bars <- ggplot(dat, aes(fill=county.name, height=.5, width=.5)) +
geom_tile(aes(x=dat$Pop, y="Population"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Median Home Income"), stat="identity") +
geom_tile(aes(x=dat$pov.rate, y="Poverty Rate"), stat="identity") +
geom_tile(aes(x=dat$Pop, y="Zilow"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Poqeru"), stat="identity") +
geom_hline(yintercept=c(4.5,3.5,2.5,1.5)) +
facet_grid(~facet) +
theme(legend.position = "top",
strip.background = element_blank())
bars
dat
bars <- ggplot(dat, aes(fill=county.name, height=.5, width=.5)) +
geom_tile(aes(x=dat$Pop, y="Population"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Median Home Income"), stat="identity") +
geom_tile(aes(x=dat$pov.rate, y="Poverty Rate"), stat="identity") +
geom_tile(aes(x=dat$Pop, y="Zilow"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Poqeru"), stat="identity") +
geom_hline(yintercept=c(4.5,3.5,2.5,1.5)) +
facet_grid(~colnames(dat)[2:4]) +
theme(legend.position = "top",
strip.background = element_blank())
bars
bars <- ggplot(dat, aes(fill=county.name, height=.5, width=.5)) +
geom_tile(aes(x=dat$Pop, y="Population"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Median Home Income"), stat="identity") +
geom_tile(aes(x=dat$pov.rate, y="Poverty Rate"), stat="identity") +
geom_hline(yintercept=c(3.5,2.5,1.5)) +
facet_grid(~colnames(dat)[2:4]) +
theme(legend.position = "top",
strip.background = element_blank())
bars
bars <- ggplot(dat, aes(fill=county.name, height=.5, width=.5)) +
geom_tile(aes(x=dat$Pop, y="Population"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Median Home Income"), stat="identity") +
geom_tile(aes(x=dat$pov.rate, y="Poverty Rate"), stat="identity") +
geom_hline(yintercept=c(3.5,2.5,1.5)) +
facet_grid(~colnames(dat)[1:4]) +
theme(legend.position = "top",
strip.background = element_blank())
bars
bars <- ggplot(dat, aes(fill=county.name, height=.5, width=.5)) +
geom_tile(aes(x=dat$Pop, y="Population"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Median Home Income"), stat="identity") +
geom_tile(aes(x=dat$pov.rate, y="Poverty Rate"), stat="identity") +
geom_hline(yintercept=c(3.5,2.5,1.5)) +
facet_grid(~colnames(dat)[1:5]) +
theme(legend.position = "top",
strip.background = element_blank())
bars
bars <- ggplot(dat, aes(fill=county.name, height=.5, width=.5)) +
geom_tile(aes(x=dat$Pop, y="Population"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Median Home Income"), stat="identity") +
geom_tile(aes(x=dat$pov.rate, y="Poverty Rate"), stat="identity") +
geom_hline(yintercept=c(3.5,2.5,1.5)) +
theme(legend.position = "top",
strip.background = element_blank())
bars
bars <- ggplot(dat, aes(fill=county.name, height=.5, width=.5)) +
geom_tile(aes(x=dat$Pop, y="Population"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Median Home Income"), stat="identity") +
geom_tile(aes(x=dat$pov.rate, y="Poverty Rate"), stat="identity") +
geom_hline(yintercept=c(2.5,1.5)) +
theme(legend.position = "top",
strip.background = element_blank())
bars
bars <- ggplot(dat, aes(fill=county.name, height=.5, width=.5)) +
geom_tile(aes(x=dat$Pop, y="Population"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Median Home Income"), stat="identity") +
geom_tile(aes(x=dat$pov.rate, y="Poverty Rate"), stat="identity") +
geom_hline(yintercept=c(2.5,1.5)) +
theme(legend.position = "top",
panel.grid=element_blank())
bars
bars <- ggplot(dat, aes(fill=county.name, height=.5, width=.5)) +
geom_tile(aes(x=dat$Pop, y="Population"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Median Home Income"), stat="identity") +
geom_tile(aes(x=dat$pov.rate, y="Poverty Rate"), stat="identity") +
geom_hline(yintercept=c(2.5,1.5)) +
theme(legend.position = "top",
axis.text=element_blank()
)
bars
bars <- ggplot(dat, aes(fill=county.name, height=.5, width=.5)) +
geom_tile(aes(x=dat$Pop, y="Population"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Median Home Income"), stat="identity") +
geom_tile(aes(x=dat$pov.rate, y="Poverty Rate"), stat="identity") +
geom_hline(yintercept=c(2.5,1.5)) +
theme(legend.position = "top",
axis.title = element_blank()
)
bars
bars <- ggplot(dat, aes(fill=county.name, height=.4, width=.5)) +
geom_tile(aes(x=dat$Pop, y="Population"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Median Home Income"), stat="identity") +
geom_tile(aes(x=dat$pov.rate, y="Poverty Rate"), stat="identity") +
geom_hline(yintercept=c(2.5,1.5)) +
theme(legend.position = "top",
axis.title = element_blank(),
panel.border = element_blank()
)
bars
bars <- ggplot(dat, aes(fill=county.name, height=.4, width=.5)) +
geom_tile(aes(x=dat$Pop, y="Population"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Median Home Income"), stat="identity") +
geom_tile(aes(x=dat$pov.rate, y="Poverty Rate"), stat="identity") +
geom_hline(yintercept=c(2.5,1.5)) +
theme(legend.position = "top",
axis.title = element_blank(),
panel.border = element_blank(),
legend.title = element_blank()
)
bars
ggplot(diamonds)  # if only the dataset is known.
ggplot(diamonds, aes(x=carat))
diamonds
bars <- ggplot(dat, aes(x= c(0,10), fill=county.name, height=.5, width=.5)) +
geom_tile(aes(x=dat$Pop, y="Population"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Median Home Income"), stat="identity") +
geom_tile(aes(x=dat$pov.rate, y="Poverty Rate"), stat="identity") +
geom_tile(aes(x=dat$Pop, y="Zilow"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Poqeru"), stat="identity") +
geom_hline(yintercept=c(4.5,3.5,2.5,1.5)) +
theme(legend.position = "top")
bars
bars <- ggplot(dat, aes(x= c(0,20), fill=county.name, height=.5, width=.5)) +
geom_tile(aes(x=dat$Pop, y="Population"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Median Home Income"), stat="identity") +
geom_tile(aes(x=dat$pov.rate, y="Poverty Rate"), stat="identity") +
geom_tile(aes(x=dat$Pop, y="Zilow"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Poqeru"), stat="identity") +
geom_hline(yintercept=c(4.5,3.5,2.5,1.5)) +
theme(legend.position = "top")
bars
bars <- ggplot(dat, aes(color=county.name, height=.5, width=.5)) +
geom_tile(aes(x=dat$Pop, y="Population"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Median Home Income"), stat="identity") +
geom_tile(aes(x=dat$pov.rate, y="Poverty Rate"), stat="identity") +
geom_tile(aes(x=dat$Pop, y="Zilow"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Poqeru"), stat="identity") +
geom_hline(yintercept=c(4.5,3.5,2.5,1.5)) +
theme(legend.position = "top")
bars
bars <- ggplot(dat, aes(fill = county.name, color=county.name, height=.5, width=.5)) +
geom_tile(aes(x=dat$Pop, y="Population"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Median Home Income"), stat="identity") +
geom_tile(aes(x=dat$pov.rate, y="Poverty Rate"), stat="identity") +
geom_tile(aes(x=dat$Pop, y="Zilow"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Poqeru"), stat="identity") +
geom_hline(yintercept=c(4.5,3.5,2.5,1.5)) +
theme(legend.position = "top")
bars
bars <- ggplot(dat, aes(fill = county.name, height=.5, width=.5)) +
geom_tile(aes(x=dat$Pop, y="Population"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Median Home Income"), stat="identity") +
geom_tile(aes(x=dat$pov.rate, y="Poverty Rate"), stat="identity") +
geom_tile(aes(x=dat$Pop, y="Zilow"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Poqeru"), stat="identity") +
geom_hline(yintercept=c(4.5,3.5,2.5,1.5)) +
theme(legend.position = "top")
bars
diamonds
ggplot(diamonds) + geom_point(aes(x=carat, y=price, color=cut)) + geom_smooth(aes(x=carat, y=price, color=cut))
ggplot(diamonds) +
geom_point(aes(x=carat, y=price, color=cut))
y <- diamonds
View(y)
bars <- ggplot(dat, aes(fill=county.name, height=.4, width=.5)) +
geom_tile(aes(x=dat$Pop, y="Population"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Median Home Income"), stat="identity") +
geom_tile(aes(x=dat$pov.rate, y="Poverty Rate"), stat="identity") +
geom_hline(yintercept=c(2.5,1.5)) +
theme(legend.position = "top",
axis.title = element_blank(),
panel.border = element_blank(),
legend.title = element_blank()
)
bars
bars <- ggplot(dat, aes(fill = county.name, height=.5, width=.5)) +
geom_tile(aes(x=dat$Pop, y="Population"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Median Home Income"), stat="identity") +
geom_tile(aes(x=dat$pov.rate, y="Poverty Rate"), stat="identity") +
geom_tile(aes(x=dat$Pop, y="Zilow"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Poqeru"), stat="identity") +
geom_hline(yintercept=c(4.5,3.5,2.5,1.5)) +
theme(legend.position = "top")
bars
bars <- ggplot(dat, aes(fill=county.name, height=.4, width=.5)) +
geom_tile(aes(x=dat$Pop, y="Population"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Median Home Income"), stat="identity") +
geom_tile(aes(x=dat$pov.rate, y="Poverty Rate"), stat="identity") +
geom_hline(yintercept=c(2.5,1.5)) +
theme(legend.position = "top",
axis.title = element_blank(),
panel.border = element_blank(),
legend.title = element_blank()
)
bars
dat <- cen
dat <- arrange(dat, county.name)
dat$county.name <- as.character(dat$county.name)
#creating a NY average
dat[nrow(dat)+1,] <- c(36,
0,
"State Average",
sum(dat$Pop)/62,
sum(dat$MHincome)/62,
NA,
NA,
NA,
NA,
NA,
NA,
NA,
sum(dat$pov.rate)/62,
NA,
NA,
sum(dat$bla.rate)/62,
NA,
NA)
dat$county.name <- factor(dat$county.name, ordered= TRUE)
#stripping useless columns
dat <- dat[,c(3,4,5,13,16)]
#only working with four comparatos and NY state
#"Matches for Onondaga: 1.Broome, 2.St. Lawrence, 3.Orange, 4.Sullivan, 5.Monroe"
x <- dat$county.name %in% c("Onondaga", "Broome", "St. Lawrence", "Sullivan", "State Average")
dat <- dat[x,]
dat$county.name <- factor(dat$county.name, ordered= TRUE)
dat
dat <- cen
dat <- arrange(dat, county.name)
dat$county.name <- as.character(dat$county.name)
#creating a NY average
dat[nrow(dat)+1,] <- c(36,
0,
"State Average",
sum(dat$Pop)/62,
sum(dat$MHincome)/62,
NA,
NA,
NA,
NA,
NA,
NA,
NA,
sum(dat$pov.rate)/62,
NA,
NA,
sum(dat$bla.rate)/62,
NA,
NA)
dat$county.name <- factor(dat$county.name, ordered= TRUE)
#stripping useless columns
dat <- dat[,c(3,4,5,13,16)]
dat
max(dat$pop)
max(dat$Pop)
min(dat$Pop)
colnames(dat)
scales <- data.frame(Var = colnames(dat), Max = NA, Min = NA, row.names = F)
scales <- data.frame(Var = colnames(dat), Max = NA, Min = NA)
scales
scales <- data.frame(Var = colnames(dat)[2:5], Max = NA, Min = NA)
max(dat$Pop)
scales
scales <- data.frame(Var = colnames(dat)[2:5], Max = NA, Min = NA)
scales
scales[1,] <- c(max(dat$Pop),min(dat$Pop)
#only working with four comparatos and NY state
#"Matches for Onondaga: 1.Broome, 2.St. Lawrence, 3.Orange, 4.Sullivan, 5.Monroe"
x <- dat$county.name %in% c("Onondaga", "Broome", "St. Lawrence", "Sullivan", "State Average")
dat <- dat[x,]
dat$county.name <- factor(dat$county.name, ordered= TRUE)
#################### MAKING THE BARPLOT #######################
#dat$Pop <- c(1,8,18,14,10)
#dat$MHincome <- c(11,19,4,12,10)
#dat$pov.rate <- c(5,8,14,17,10)
#using tiles
bars <- ggplot(dat, aes(fill=county.name, height=.4, width=.5)) +
geom_tile(aes(x=dat$Pop, y="Population"), stat="identity") +
geom_tile(aes(x=dat$MHincome, y="Median Home Income"), stat="identity") +
geom_tile(aes(x=dat$pov.rate, y="Poverty Rate"), stat="identity") +
geom_hline(yintercept=c(2.5,1.5)) +
theme(legend.position = "top",
axis.title = element_blank(),
panel.border = element_blank(),
legend.title = element_blank()
)
bars
############################################
#Anotations
my_grob = grobTree(textGrob("This text is at x=0.1 and y=0.9, relative!\n Anchor point is at 0,0", x=0.1,  y=0.9, hjust=0,
gp=gpar(col="firebrick", fontsize=25, fontface="bold")))
ggplot(mtcars, aes(x=cyl)) + geom_bar() + annotation_custom(my_grob) + labs(title="Annotation Example")
##############################################
#DONUT
pie <- ggplot(data=x,
aes(fill=labels,
xmax=width.max, xmin=width.min,
ymax=ymax, ymin=ymin)) +
xlim(c(0, width.max + mar)) +
geom_rect(colour=border.col,
size = border.cex) +
coord_polar(theta="y") +
geom_text(aes(x= (width.min+width.max)/2, y = x$mid, label = paste0(round(x$fraction*100, digits = 1),"%")),
size= percent.cex,
fontface = "bold",
hjust = .5,
vjust = .5,
colour = "white") +
ggtitle(label=main) +
theme_bw() +
theme(panel.grid=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title = element_blank(),
panel.border = element_blank(),
strip.background = element_rect(fill= sbgfill, color = sbgcol),
plot.margin = margin(0,0,0,0, "cm"),
legend.margin = margin(0,0,0,0, "cm"),
legend.title = element_blank(),
legend.position = "right",
legend.text = element_text(colour = "grey40", size = 9)) +
facet_wrap(~multiple, ncol = columns)
return(pie)
}
scales[1,] <- c(max(dat$Pop),min(dat$Pop))
scales <- data.frame(Var = colnames(dat)[2:5], Max = NA, Min = NA)
scales[1,c(2:3)] <- c(max(dat$Pop),min(dat$Pop))
scales
scales <- data.frame(Var = colnames(dat)[2:5], Max = NA, Min = NA)
scales[1,c(2:3)] <- c(max(dat$Pop),min(dat$Pop))
scales[2,c(2:3)] <- c(max(dat$MHincome),min(dat$MHincome))
scales[3,c(2:3)] <- c(max(dat$pov.rate),min(dat$pov.rate))
scales[4,c(2:3)] <- c(max(dat$bla.rate),min(dat$bla.rate))
scales
dat
dat <- dat[,c(3,4,5,13,16)]
dat <- cen
dat <- arrange(dat, county.name)
dat$county.name <- as.character(dat$county.name)
#stripping useless columns
dat <- dat[,c(3,4,5,13,16)]
dat
dat <- cen
dat <- arrange(dat, county.name)
dat$county.name <- as.character(dat$county.name)
#stripping useless columns
dat <- dat[,c(3,4,5,13)]
dat[nrow(dat)+1,] <- c("State Average",
sum(dat$Pop)/62,
sum(dat$MHincome)/62,
sum(dat$pov.rate)/62)
dat
cen <- readRDS( gzcon(url("https://github.com/DataCapstone/Data-Capstone/blob/master/Raw-Data/NYcensus.rds?raw=true")))
dat <- cen
dat <- arrange(dat, county.name)
dat$county.name <- as.character(dat$county.name)
#stripping useless columns
dat <- dat[,c(3,4,5,13)]
#creating a NY average
dat[nrow(dat)+1,] <- c("State Average",
sum(dat$Pop)/62,
sum(dat$MHincome)/62,
sum(dat$pov.rate)/62)
dat$county.name <- factor(dat$county.name, ordered= TRUE)
dat
dat$Pop <- round(dat$Pop, digits = 0)
dat$MHincome <- round(dat$MHincome, digits = 0)
dat$pov.rate <- round(dat$pov.rate*100, digits = 1)
dat$bla.rate <- round(dat$bla.rate*100, digits = 1)
dat <- cen
dat <- arrange(dat, county.name)
dat$county.name <- as.character(dat$county.name)
#stripping useless columns
dat <- dat[,c(3,4,5,13)]
#creating a NY average
dat[nrow(dat)+1,] <- c("State Average",
sum(dat$Pop)/62,
sum(dat$MHincome)/62,
sum(dat$pov.rate)/62)
dat
dat$Pop <- round(dat$Pop, digits = 0)
class(dat$Pop)
str(pop)
str(dat)
cen <- readRDS( gzcon(url("https://github.com/DataCapstone/Data-Capstone/blob/master/Raw-Data/NYcensus.rds?raw=true")))
dat <- cen
dat <- arrange(dat, county.name)
dat$county.name <- as.character(dat$county.name)
dat <- dat[,c(3,4,5,13)]
dat$Pop <- as.numeric(dat$Pop)
dat$MHincome <- as.numeric(dat$MHincome)
dat$pov.rate <- as.numeric(dat$pov.rate)
dat[nrow(dat)+1,] <- c("State Average",
sum(dat$Pop)/62,
sum(dat$MHincome)/62,
sum(dat$pov.rate)/62)
dat$Pop <- round(dat$Pop, digits = 0)
str(dat)
dat <- cen
dat <- arrange(dat, county.name)
dat$county.name <- as.character(dat$county.name)
#stripping useless columns
dat <- dat[,c(3,4,5,13)]
str(dat)
dat[nrow(dat)+1,] <- c("State Average",
as.numeric(sum(dat$Pop)/62),
sum(dat$MHincome)/62,
sum(dat$pov.rate)/62)
str(dat)
str(dat)
dat <- cen
dat <- arrange(dat, county.name)
dat$county.name <- as.character(dat$county.name)
#stripping useless columns
dat <- dat[,c(3,4,5,13)]
str(dat)
y <- c("State Average",
as.numeric(sum(dat$Pop)/62),
sum(dat$MHincome)/62,
sum(dat$pov.rate)/62)
y
y <- data.frame("State Average", sum(dat$Pop)/62, sum(dat$MHincome)/62, sum(dat$pov.rate)/62)
y
colnames(y) <- colnames(dat)
y
rbind(dat,y)
dat <- cen
dat <- arrange(dat, county.name)
dat$county.name <- as.character(dat$county.name)
#stripping useless columns
dat <- dat[,c(3,4,5,13)]
#creating a NY average
y <- data.frame("State Average", sum(dat$Pop)/62, sum(dat$MHincome)/62, sum(dat$pov.rate)/62)
colnames(y) <- colnames(dat)
dat <- rbind(dat,y)
dat
round(dat, digits = 1)
round(dat)
round(dat[,2:3], digits = 0)
dat[,2:3]<- round(dat[,2:3], digits = 0)
dat
dat[,4]<- round(dat[,4]*100, digits = 1)
dat
scales <- data.frame(Var = colnames(dat)[2:5], Max = NA, Min = NA)
scales[1,c(2:3)] <- c(max(dat$Pop),min(dat$Pop))
scales[2,c(2:3)] <- c(max(dat$MHincome),min(dat$MHincome))
scales[3,c(2:3)] <- c(max(dat$pov.rate),min(dat$pov.rate))
scales[4,c(2:3)] <- c(max(dat$bla.rate),min(dat$bla.rate))
scales
scales[4,)] <- NULL
scales[4,] <- NULL
scales
scales[4,] <- NULL
scales[4,]
scales[4,] <- NA
scales[4,] <- NULL
scales[4,]
rm(scales[4,])
scales
str(scales)
scales <- data.frame(Var = colnames(dat)[2:4], Max = NA, Min = NA)
scales[1,c(2:3)] <- c(max(dat$Pop),min(dat$Pop))
scales[2,c(2:3)] <- c(max(dat$MHincome),min(dat$MHincome))
scales[3,c(2:3)] <- c(max(dat$pov.rate),min(dat$pov.rate))
scales
