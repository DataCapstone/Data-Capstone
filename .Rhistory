x <- gra16.3$recip_cat_type == "i: Private agencies"
gra16.3$recip_cat_type[x] <- "f: Private agencies"
#making recip_cat_type into a factor and changing the levels into more friendly ones
gra16.3$recip_cat_type <- factor(x= gra16.3$recip_cat_type)
levels(gra16.3$recip_cat_type) <- c("Private firms",
"Government",
"Public Higher Ed. Inst.",
"Private Higher Ed. Inst.",
"Nonprofit agencies",
"Other")
# clean agency names a bit to be more consistent
simpleCap <- function(x) {
s <- tolower(x)
s <- strsplit(s, " ")[[1]]
paste(toupper(substring(s, 1,1)), substring(s, 2),
sep="", collapse=" ")
}
gra16.3$maj_agency_cat <-sapply(gra16.3$maj_agency_cat, simpleCap)
gra16.3$maj_agency_cat<-gsub( "Department Of ", "", as.character(gra16.3$maj_agency_cat), n)
gra16.3$maj_agency_cat<-(substring(gra16.3$maj_agency_cat, 7, nchar(gra16.3$maj_agency_cat)))
#Load the population data
population <- readRDS(gzcon(url("https://github.com/DataCapstone/Data-Capstone/blob/master/Raw-Data/NYcensus.rds?raw=true")))
pop.dat <- population[ c("county.name", "Pop") ]
pop.dat.state <- rbind(pop.dat, data.frame(county.name="NY", Pop=sum(pop.dat$Pop)))
gra16.3$maj_agency_cat<- as.character(gra16.3$maj_agency_cat)
agency.agg <- aggregate (gra16.3$fed_funding_amount, by=list(gra16.3$recip_cat_type, gra16.3$maj_agency_cat, gra16.3$county), FUN=sum, na.rm=TRUE)
colnames(agency.agg)<- c("Recipient_Type", "Agency", "County", "Federal_Funding")
agg.pop <- merge(agency.agg , pop.dat.state, by.x = "County", by.y = "county.name", all.x=TRUE)
agg.pop.percap <- mutate(agg.pop , percap =  Federal_Funding / Pop )
county.filter <- filter(agg.pop.percap, County %in% c("Onondaga", "Tompkins", "Herkimer"))
#counties.percap.ordered<- county.filter[order(county.filter$percap), ]
#selected<-counties.percap.ordered[unlist(tapply(row.names(counties.percap.ordered), counties.percap.ordered$County_Name, tail, n = 3)), ]
ggplot(county.filter, aes(Agency, Federal_Funding, fill=Recipient_Type)) + geom_bar(
position = "fill", stat="identity") +  facet_wrap(~County)+
theme(legend.position="right", legend.title =
element_blank(),axis.title.x=element_blank(),
axis.title.y= element_blank()) + coord_flip()
ggplot(county.filter, aes(Agency, percap, fill=Recipient_Type)) + geom_bar(
position = "fill", stat="identity") +  facet_wrap(~County)+
theme(legend.position="right", legend.title =
element_blank(),axis.title.x=element_blank(),
axis.title.y= element_blank()) + coord_flip()
class(county.filter$percap)
ggplot(county.filter, aes(Agency, percap, fill=Recipient_Type)) + geom_bar(
position = "fill") +  facet_wrap(~County)+
theme(legend.position="right", legend.title =
element_blank(),axis.title.x=element_blank(),
axis.title.y= element_blank()) + coord_flip()
ggplot(county.filter, aes(Agency, percap, fill=Recipient_Type))  +  facet_wrap(~County)+
theme(legend.position="right", legend.title =
element_blank(),axis.title.x=element_blank(),
axis.title.y= element_blank()) + coord_flip()
ggplot(county.filter, aes(Agency, percap, fill=Recipient_Type)) + geom_bar(
position = "fill") +  facet_wrap(~County)+
theme(legend.position="right", legend.title =
element_blank(),axis.title.x=element_blank(),
axis.title.y= element_blank()) + coord_flip()
ggplot(county.filter, aes(Agency, percap, fill=Recipient_Type)) + geom_bar(
position = "fill") +  facet_wrap(~County)+
theme(legend.position="right", legend.title =
element_blank(),axis.title.x=element_blank(),
axis.title.y= element_blank()) + coord_flip()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(pander)
library(shiny)
library(censusapi)
library(plotly)
# Download the data, clean
gra16.named <- readRDS(gzcon(url("https://github.com/DataCapstone/Data-Capstone/blob/master/Raw-Data/NYgra16_counties_named.rds?raw=true")))
#codes <- read.csv("https://raw.githubusercontent.com/DataCapstone/Data-Capstone/master/Raw-Data/countycodesNY.csv")
#exclude money going to state government and choose only project grants
gra16.without.state.with.projgrants <- filter(gra16.named , recipient_type != "00: State government" & assistance_type== "04: Project grant")
# drop rows with negative funding values
positive.grants <- subset (gra16.without.state.with.projgrants, fed_funding_amount > 0)
gra16.2 <- mutate(positive.grants, county = as.character(Name))
#note, changed from agency_name with 72 options to maj_agency_cat with 26!, also dropped columns I didn't need
gra16.3 <- gra16.2[ c("recip_cat_type", "county" , "fed_funding_amount" ,  "maj_agency_cat" ) ]
x <- gra16.3$recip_cat_type == "i: Private agencies"
gra16.3$recip_cat_type[x] <- "f: Private agencies"
#making recip_cat_type into a factor and changing the levels into more friendly ones
gra16.3$recip_cat_type <- factor(x= gra16.3$recip_cat_type)
levels(gra16.3$recip_cat_type) <- c("Private firms",
"Government",
"Public Higher Ed. Inst.",
"Private Higher Ed. Inst.",
"Nonprofit agencies",
"Other")
# clean agency names a bit to be more consistent
simpleCap <- function(x) {
s <- tolower(x)
s <- strsplit(s, " ")[[1]]
paste(toupper(substring(s, 1,1)), substring(s, 2),
sep="", collapse=" ")
}
gra16.3$maj_agency_cat <-sapply(gra16.3$maj_agency_cat, simpleCap)
gra16.3$maj_agency_cat<-gsub( "Department Of ", "", as.character(gra16.3$maj_agency_cat), n)
gra16.3$maj_agency_cat<-(substring(gra16.3$maj_agency_cat, 7, nchar(gra16.3$maj_agency_cat)))
#Load the population data
population <- readRDS(gzcon(url("https://github.com/DataCapstone/Data-Capstone/blob/master/Raw-Data/NYcensus.rds?raw=true")))
pop.dat <- population[ c("county.name", "Pop") ]
pop.dat.state <- rbind(pop.dat, data.frame(county.name="NY", Pop=sum(pop.dat$Pop)))
gra16.3$maj_agency_cat<- as.character(gra16.3$maj_agency_cat)
agency.agg <- aggregate (gra16.3$fed_funding_amount, by=list(gra16.3$recip_cat_type, gra16.3$maj_agency_cat, gra16.3$county), FUN=sum, na.rm=TRUE)
colnames(agency.agg)<- c("Recipient_Type", "Agency", "County", "Federal_Funding")
gra16.3$maj_agency_cat<- as.character(gra16.3$maj_agency_cat)
agency.agg <- aggregate (gra16.3$fed_funding_amount, by=list(gra16.3$recip_cat_type, gra16.3$maj_agency_cat, gra16.3$county), FUN=sum, na.rm=TRUE)
colnames(agency.agg)<- c("Recipient_Type", "Agency", "County", "Federal_Funding")
agg.pop <- merge(agency.agg , pop.dat.state, by.x = "County", by.y = "county.name", all.x=TRUE)
agg.pop.percap <- mutate(agg.pop , percap =  Federal_Funding / Pop )
county.filter <- filter(agg.pop.percap, County %in% c("Onondaga", "Tompkins", "Herkimer"))
#counties.percap.ordered<- county.filter[order(county.filter$percap), ]
#selected<-counties.percap.ordered[unlist(tapply(row.names(counties.percap.ordered), counties.percap.ordered$County_Name, tail, n = 3)), ]
ggplot(county.filter, aes(Agency, percap, fill=Recipient_Type)) + geom_bar(
position = "fill") +  facet_wrap(~County)+
theme(legend.position="right", legend.title =
element_blank(),axis.title.x=element_blank(),
axis.title.y= element_blank()) + coord_flip()
ggplot(county.filter, aes(Agency, percap, fill=Recipient_Type)) +  facet_wrap(~County)+
theme(legend.position="right", legend.title =
element_blank(),axis.title.x=element_blank(),
axis.title.y= element_blank()) + coord_flip()
ggplot(county.filter, aes(Agency, percap)) + geom_bar(aes(fill = Recipient_Type)) facet_wrap(~County)+
ggplot(county.filter, aes(Agency, percap)) + geom_bar(aes(fill = Recipient_Type))+ facet_wrap(~County)+
theme(legend.position="right", legend.title =
element_blank(),axis.title.x=element_blank(),
axis.title.y= element_blank()) + coord_flip()
ggplot(county.filter, aes(Agency, percap)) + geom_bar(aes(fill = Recipient_Type))+ facet_wrap(~County)+position = position_stack(reverse = TRUE)) +
ggplot(county.filter, aes(Agency, percap)) + geom_bar(aes(fill = Recipient_Type))+ facet_wrap(~County)+ position = position_stack(reverse = TRUE) +
coord_flip() +
theme(legend.position="right", legend.title =
element_blank(),axis.title.x=element_blank(),
axis.title.y= element_blank())
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar(colour="Recipient_Type", stat="identity")+ facet_wrap(~County)+ position = position_stack(reverse = TRUE) +
coord_flip() +
theme(legend.position="right", legend.title =
element_blank(),axis.title.x=element_blank(),
axis.title.y= element_blank())
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar(colour="Recipient_Type", stat="identity")+ facet_wrap(~County) +
coord_flip() +
theme(legend.position="right", legend.title =
element_blank(),axis.title.x=element_blank(),
axis.title.y= element_blank())
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar(colour=Recipient_Type, stat="identity")+ facet_wrap(~County) +
coord_flip() +
theme(legend.position="right", legend.title =
element_blank(),axis.title.x=element_blank(),
axis.title.y= element_blank())
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() +
theme(legend.position="right", legend.title =
element_blank(),axis.title.x=element_blank(),
axis.title.y= element_blank())
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() +
theme_bw(legend.position="right", legend.title =
element_blank(),axis.title.x=element_blank(),
axis.title.y= element_blank())
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() +
theme_bw()
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() +
theme_bw(axis.title.x=element_blank(),
axis.title.y= element_blank()) )
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() +
theme_bw(axis.title.x=element_blank(),
axis.title.y= element_blank())
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() +theme_void()
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() +theme_classic()
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() +theme_classic(legend.position="right", legend.title =
element_blank(),axis.title.x=element_blank(),
axis.title.y= element_blank())
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() + theme_classic+ heme(legend.position="right", legend.title =
element_blank(),axis.title.x=element_blank(),
axis.title.y= element_blank())
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() + theme_classic+ theme(legend.position="right", legend.title =
element_blank(),axis.title.x=element_blank(),
axis.title.y= element_blank())
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() + theme_classic
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() + theme_classic() + theme(legend.position="right", legend.title =
element_blank(),axis.title.x=element_blank(),
axis.title.y= element_blank())
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() + theme_classic()
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() + theme_classic(axis.line.x = element_blank(), axis.line.y = element_blank() )
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() + theme_classic(axis.line.x = element_line(color="white"), axis.line.y = element_blank() )
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() + theme_classic(axis.line.x = element_line(color="white"), axis.line.y = element_line(color="white") )
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() + theme_classic(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())  )
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() + theme_classic(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() + theme_classic() +theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() + theme_void() +theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() + theme_void() +theme(axis.line = element_line(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() + theme_void() +theme(axis.line = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
county.filter <- filter(agg.pop.percap, County %in% c("Onondaga", "Tompkins", "Genesee"))
#counties.percap.ordered<- county.filter[order(county.filter$percap), ]
#selected<-counties.percap.ordered[unlist(tapply(row.names(counties.percap.ordered), counties.percap.ordered$County_Name, tail, n = 3)), ]
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() + theme_void() +theme(axis.line = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
county.filter <- filter(agg.pop.percap, County %in% c("Onondaga", "Tompkins", "Cayuga"))
#counties.percap.ordered<- county.filter[order(county.filter$percap), ]
#selected<-counties.percap.ordered[unlist(tapply(row.names(counties.percap.ordered), counties.percap.ordered$County_Name, tail, n = 3)), ]
county.filter <- filter(agg.pop.percap, County %in% c("Onondaga", "Tompkins", "Cayuga"))
#counties.percap.ordered<- county.filter[order(county.filter$percap), ]
#selected<-counties.percap.ordered[unlist(tapply(row.names(counties.percap.ordered), counties.percap.ordered$County_Name, tail, n = 3)), ]
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() + theme_void() +theme(axis.line = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() + theme_void() +theme(axis.line = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank() + xlab("Dollars") +
ylab("Agency"))
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() + theme_void() +theme(axis.line = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank() + xlab("Dollars") +
ylab("Agency")+ ggtitle("Federal Project Grant Funding by County")
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() + theme_void() +theme(axis.line = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank() + xlab("Dollars") +
ylab("Agency")+ ggtitle("Federal Project Grant Funding by County"))
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() + theme_void() +theme(axis.line = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank() + scale_x_continuous("Dollars") +
scale_y_continuous("Agency") ggtitle("Federal Project Grant Funding by County"))
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() + theme_void() +theme(axis.line = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) + scale_x_continuous("Dollars") +
scale_y_continuous("Agency") ggtitle("Federal Project Grant Funding by County"))
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() + theme_void() +theme(axis.line = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank()) + scale_x_continuous("Dollars") +
scale_y_continuous("Agency")+ ggtitle("Federal Project Grant Funding by County"))
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() + theme_void() +theme(axis.line = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank() + scale_x_continuous("Dollars") +
scale_y_continuous("Agency")+ ggtitle("Federal Project Grant Funding by County"))
g<-ggplot(county.filter, aes(x=Agency, y= Federal_Funding))
g + geom_bar(aes(fill=Recipient_Type), width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Histogram on Categorical Variable",
subtitle="Manufacturer across Vehicle Classes")
g<-ggplot(county.filter, aes(x=Federal_funding, y= Federal_Funding))
g + geom_bar(aes(fill=Recipient_Type), state="identity", width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Histogram on Categorical Variable",
subtitle="Manufacturer across Vehicle Classes")
g<-ggplot(county.filter, aes(x=Federal_Funding, y= Agency))
g + geom_bar(aes(fill=Recipient_Type), state="identity", width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Histogram on Categorical Variable",
subtitle="Manufacturer across Vehicle Classes")
g<-ggplot(county.filter, aes(x=Federal_Funding, y= Agency))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Histogram on Categorical Variable",
subtitle="Manufacturer across Vehicle Classes")
g<-ggplot(county.filter, aes(x=Agency, y= Federal_Funding))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Histogram on Categorical Variable",
subtitle="Manufacturer across Vehicle Classes")+ coord_flip
g<-ggplot(county.filter, aes(x=Agency, y= Federal_Funding))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Histogram on Categorical Variable",
subtitle="Manufacturer across Vehicle Classes")+ coord_flip()
g<-ggplot(county.filter, aes(x=Agency, y= Federal_Funding))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.5) + + facet_wrap(~County)+ theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Histogram on Categorical Variable",
subtitle="Manufacturer across Vehicle Classes")+ coord_flip()
g<-ggplot(county.filter, aes(x=Agency, y= Federal_Funding))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.5)  + facet_wrap(~County)+ theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Histogram on Categorical Variable",
subtitle="Manufacturer across Vehicle Classes")+ coord_flip()
g<-ggplot(county.filter, aes(x=Agency, y= Federal_Funding))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.5)  + facet_wrap(~County)+ theme(axis.text.x = element_text(angle=65, vjust=0.6)) + theme_classic+
labs(title="Histogram on Categorical Variable",
subtitle="Manufacturer across Vehicle Classes")+ coord_flip()
g<-ggplot(county.filter, aes(x=Agency, y= Federal_Funding))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.5)  + facet_wrap(~County)+ theme(axis.text.x = element_text(angle=65, vjust=0.6)) + theme_classic()+
labs(title="Histogram on Categorical Variable",
subtitle="Manufacturer across Vehicle Classes")+ coord_flip()
g<-ggplot(county.filter, aes(x=Agency, y= Federal_Funding))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.5)  + facet_wrap(~County)+ theme(axis.text.x = element_text(angle=65, vjust=0.6)) + theme_void()+
labs(title="Histogram on Categorical Variable",
subtitle="Manufacturer across Vehicle Classes")+ coord_flip()
g<-ggplot(county.filter, aes(x=Agency, y= Federal_Funding))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.5)  + facet_wrap(~County)+ theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Histogram on Categorical Variable",
subtitle="Manufacturer across Vehicle Classes")+ coord_flip()
g<-ggplot(county.filter, aes(x=Agency, y= Federal_Funding))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.5)  + facet_wrap(~County)+ theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Histogram on Categorical Variable",
subtitle="Manufacturer across Vehicle Classes")+ coord_flip()+ theme_tufte()
install.packages("ggfortify")
library(ggfortify)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(pander)
library(shiny)
library(censusapi)
library(plotly)
library(ggfortify)
g<-ggplot(county.filter, aes(x=Agency, y= Federal_Funding))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.5)  + facet_wrap(~County)+ theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Histogram on Categorical Variable",
subtitle="Manufacturer across Vehicle Classes")+ coord_flip()+ theme_tufte()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(pander)
library(shiny)
library(censusapi)
library(plotly)
library(ggfortify)
g<-ggplot(county.filter, aes(x=Agency, y= Federal_Funding))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.5)  + facet_wrap(~County)+ theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Histogram on Categorical Variable",
subtitle="Manufacturer across Vehicle Classes")+ coord_flip()+ theme_tufte()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(pander)
library(shiny)
library(censusapi)
library(plotly)
library(ggthemes)
install.packages("ggthemes")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(pander)
library(shiny)
library(censusapi)
library(plotly)
library(ggthemes)
g<-ggplot(county.filter, aes(x=Agency, y= Federal_Funding))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.5)  + facet_wrap(~County)+ theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Histogram on Categorical Variable",
subtitle="Manufacturer across Vehicle Classes")+ coord_flip()+ theme_tufte()
g<-ggplot(county.filter, aes(x=Agency, y= Federal_Funding))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.5)  + facet_wrap(~County) +
labs(title="Histogram on Categorical Variable",
subtitle="Manufacturer across Vehicle Classes")+ coord_flip()+ theme_tufte()
g<-ggplot(county.filter, aes(x=Agency, y= percapita))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.5)  + facet_wrap(~County) +
labs(title="Federal Project Grant Funding by County, Agency, and Recipient Type",
subtitle="Per Capita Funding, FY 2016")+ coord_flip()+ theme_tufte()
?ggthemes
g<-ggplot(county.filter, aes(x=Agency, y= percap))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.5)  + facet_wrap(~County) +
labs(title="Federal Project Grant Funding by County, Agency, and Recipient Type",
subtitle="Per Capita Funding, FY 2016")+ coord_flip()+ theme_tufte()
g<-ggplot(county.filter, aes(x=Agency, y= percap))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.8)  + facet_wrap(~County) +
labs(title="Federal Project Grant Funding by County, Agency, and Recipient Type",
subtitle="Per Capita Funding, FY 2016")+ coord_flip()+ theme_tufte()
agg.pop <- merge(agency.agg , pop.dat.state, by.x = "County", by.y = "county.name", all.x=TRUE)
agg.pop.percap <- mutate(agg.pop , Per Capita Funding =  Federal_Funding / Pop )
agg.pop <- merge(agency.agg , pop.dat.state, by.x = "County", by.y = "county.name", all.x=TRUE)
agg.pop.percap <- mutate(agg.pop , "Per Capita Funding" =  Federal_Funding / Pop )
county.filter <- filter(agg.pop.percap, County %in% c("Onondaga", "Tompkins", "Cayuga"))
#counties.percap.ordered<- county.filter[order(county.filter$percap), ]
#selected<-counties.percap.ordered[unlist(tapply(row.names(counties.percap.ordered), counties.percap.ordered$County_Name, tail, n = 3)), ]
g<-ggplot(county.filter, aes(x=Agency, y= percap))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.8)  + facet_wrap(~County) +
labs(title="Federal Project Grant Funding by County, Agency, and Recipient Type",
subtitle="Per Capita Funding, FY 2016")+ coord_flip()+ theme_tufte()
g<-ggplot(county.filter, aes(x=Agency, y= Per Capita Funding))
g<-ggplot(county.filter, aes(x=Agency, y= "Per Capita Funding""))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.8)  + facet_wrap(~County) +
g<-ggplot(county.filter, aes(x=Agency, y= "Per Capita Funding"))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.8)  + facet_wrap(~County) +
labs(title="Federal Project Grant Funding by County, Agency, and Recipient Type",
subtitle="Per Capita Funding, FY 2016")+ coord_flip()+ theme_tufte()
g<-ggplot(county.filter, aes(x=Agency, y= Per Capita Funding))
g<-ggplot(county.filter, aes(x=Agency, y= percap))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.8)  + facet_wrap(~County) +
labs(title="Federal Project Grant Funding by County, Agency, and Recipient Type",
subtitle="Per Capita Funding, FY 2016")+ coord_flip()+ theme_tufte()
g<-ggplot(county.filter, aes(x=Agency, y= percap))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.8)  + facet_wrap(~County) +
labs(title="Federal Project Grant Funding by County, Agency, and Recipient Type",
subtitle="Per Capita Funding, FY 2016")+ coord_flip()+ theme_tufte()
agg.pop <- merge(agency.agg , pop.dat.state, by.x = "County", by.y = "county.name", all.x=TRUE)
agg.pop.percap <- mutate(agg.pop , percap =  Federal_Funding / Pop )
county.filter <- filter(agg.pop.percap, County %in% c("Onondaga", "Tompkins", "Cayuga"))
#counties.percap.ordered<- county.filter[order(county.filter$percap), ]
#selected<-counties.percap.ordered[unlist(tapply(row.names(counties.percap.ordered), counties.percap.ordered$County_Name, tail, n = 3)), ]
ggplot(data=county.filter, aes(x=Agency, y=Federal_Funding, fill=Recipient_Type)) + geom_bar( stat="identity")+ facet_wrap(~County) +
coord_flip() + theme_void() +theme(axis.line = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank() + scale_x_continuous("Dollars") +
scale_y_continuous("Agency")+ ggtitle("Federal Project Grant Funding by County"))
g<-ggplot(county.filter, aes(x=Agency, y= percap))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.8)  + facet_wrap(~County) +
labs(title="Federal Project Grant Funding by County, Agency, and Recipient Type",
subtitle="Per Capita Funding, FY 2016")+ coord_flip()+ theme_tufte()
g<-ggplot(county.filter, aes(x=Agency, y= percap))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.8)  + facet_wrap(~County) +
labs(title="Federal Project Grant Funding by County, Agency, and Recipient Type",
subtitle="Per Capita Funding, FY 2016")+ coord_flip()+ theme_tufte(base_size=15)
g<-ggplot(county.filter, aes(x=Agency, y= percap))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.8)  + facet_wrap(~County) +
labs(title="Federal Project Grant Funding by County, Agency, and Recipient Type",
subtitle="Per Capita Funding, FY 2016")+ coord_flip()+ theme_tufte()+theme(legend.position="right", legend.title =
element_blank(),axis.title.x=element_blank(),
axis.title.y= element_blank())
g<-ggplot(county.filter, aes(x=Agency, y= percap))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.8)  + facet_wrap(~County) +
labs(title="Federal Project Grant Funding by County, Agency, and Recipient Type",
subtitle="Per Capita Funding, FY 2016")+ coord_flip()+ theme_tufte()+theme(legend.position="right", legend.title =
element_blank(),axis.title.x=element_blank(), legend.key.size=.5,
axis.title.y= element_blank())
g<-ggplot(county.filter, aes(x=Agency, y= percap))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.8)  + facet_wrap(~County) +
labs(title="Federal Project Grant Funding by County, Agency, and Recipient Type",
subtitle="Per Capita Funding, FY 2016")+ coord_flip()+ theme_tufte()+theme(legend.position="right", legend.title =
element_blank(),axis.title.x=element_blank(), legend.key.size=.5,
axis.title.y= element_blank())
g<-ggplot(county.filter, aes(x=Agency, y= percap))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.8)  + facet_wrap(~County) +
labs(title="Federal Project Grant Funding by County, Agency, and Recipient Type",
subtitle="Per Capita Funding, FY 2016")+ coord_flip()+ theme_tufte()+theme(legend.position="right", legend.title =
element_blank(),axis.title.x=element_blank(), legend.key.size = unit(.5),
axis.title.y= element_blank())
g<-ggplot(county.filter, aes(x=Agency, y= percap))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.8)  + facet_wrap(~County) +
labs(title="Federal Project Grant Funding by County, Agency, and Recipient Type",
subtitle="Per Capita Funding, FY 2016")+ coord_flip()+ theme_tufte()+theme(legend.position="right", legend.title =
g<-ggplot(county.filter, aes(x=Agency, y= percap))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.8)  + facet_wrap(~County) +
g<-ggplot(county.filter, aes(x=Agency, y= percap))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.8)  + facet_wrap(~County) +
labs(title="Federal Project Grant Funding by County, Agency, and Recipient Type",
subtitle="Per Capita Funding, FY 2016")+ coord_flip()+ theme_tufte()+theme(legend.position="right", legend.title =
element_blank(),axis.title.x=element_blank(), legend.key.size = unit(3,"line"),
axis.title.y= element_blank())
g<-ggplot(county.filter, aes(x=Agency, y= percap))
g + geom_bar(aes(fill=Recipient_Type), stat="identity", width = 0.8)  + facet_wrap(~County) +
labs(title="Federal Project Grant Funding by County, Agency, and Recipient Type",
subtitle="Per Capita Funding, FY 2016")+ coord_flip()+ theme_tufte()+theme(legend.position="right", legend.title =
element_blank(),axis.title.x=element_blank(), legend.key.size = unit(.5,"line"),
axis.title.y= element_blank())
