{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Grants data frame\"\noutput: github_document\nhtml_document:\n  df_print: paged\n  keep_md: true\n  code_fold: hide\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set( message=F, warning=F, fig.width = 10, fig.height = 10 )\nlibrary(dplyr)\nlibrary(pander)\nsetwd(\"C:/Users/icps/Dropbox/3. Maxwell/4. Capston\")\ngra16 <- read.csv(\"./Data/NYgra2016.csv\", stringsAsFactors = F)\nsetwd(\"C:/Users/icps/Dropbox/3. Maxwell/4. Capston/Data-Capstone/ignacio\")\n\n```\n\n\n```{r, eval=FALSE}\n#generating a csv with the variables\nx <- gra16[1,]\nx <- as.data.frame(lapply(x, class))\nx <- as.data.frame(t(x))\nx <- data.frame(var = row.names(x), class = as.character(x$V1), stringsAsFactors = F)\ngrav <- x\nwrite.csv(grav, \"gra.variables.csv\", row.names = F)\n\n```\n\n```{r, eval= FALSE}\n#exploring some variables\n\n#types of assistance\n#what type of assistances are they getting?\nunique(gra16$asst_cat_type)\nunique(gra16$assistance_type)\n\n#cfda_program_title\nhead(gra16$cfda_program_title)\nhead(gra16$cfda_program_num)\n(table(gra16$cfda_program_title == \"\")) #has 110 blank ones.\ntable(is.na(gra16$cfda_program_title)) #no NAs here!\nclass(gra16$cfda_program_title)\n\n#fda_program_num\ntable(is.na(gra16$cfda_program_num)) #no NAs here!\ntable(gra16$cfda_program_num == \"\") #no blanks!\nclass(gra16$cfda_program_num)\n\n#project_description\nunique(gra16$project_description)\n\n######PRINCIPAL PLACE###############\n#location: wanna focus on 4 cities, no idea if they are comparable.\nsort(unique(gra16$principal_place_cc))\n# \"Syracuse\" | \"SYRACUSE\"   \n# \"Rochester\" | \"ROCHESTER\"\n# \"Albany\" | \"ALBANY\"\n#  \"Ithaca\" | \"ITHACA\" \n\nsort(unique(gra16$principal_place_state)) \n#Output is  \"Illinois\" \"Massachusetts\" \"New York\" \"NEW YORK\"\n#this means that the filter in the manual download is not for this variable. \n\n######RECIPIENTS###############\nsort(unique(gra16$recipient_state_code)) \n#output is only NY, so the filter is by recipients place, which makes sense because if we are an IDA we should care about the recipient not the pop.\n\nsort(unique(gra16$recipient_city_name)) \n# \"Syracuse\" | \"SYRACUSE\"   \n# \"Rochester\" | \"ROCHESTER\"\n# \"Albany\" | \"ALBANY\"\n#  \"Ithaca\" | \"ITHACA\" \n\nsort(unique(gra16$recipient_county_code))\nsort(unique(gra16$recipient_county_name))\nsort(unique(gra16$recipient_state_code))\n\n```\n\n#Issue with consistency of the names\n```{r}\n#looking for consistency in the names of agencies / programs\n\nx <- gra16[, c(\"maj_agency_cat\", \"agency_name\", \"agency_code\", \"cfda_program_num\", \"cfda_program_title\")]\n\nx$maj <- substr(x$maj_agency_cat, 1,2)\nx$cod <- substr(x$agency_code, 1,2)\nunique(x$maj)\nunique(x$cod)\nx$cfda <- substr(as.character(x$cfda_program_num), 1,2)\n\ntable(x$maj == x$cod) #only 4 inconsistencies between the first two numbers of agency maj and agency code.\n\ntable(x$maj == x$cfda) #only 43 times they are the same\n#and this is when:\nx[x$maj == x$cfda,] #19 for department of state in both cfda codes and agency code\n\n\nlength(unique(x$maj_agency_cat)) #24\nlength(unique(x$maj)) #23\nlength(unique(x$agency_code)) #83\nlength(unique(x$cod)) #25\n\nlength(unique(x$agency_name)) #67\n\nlength(unique(x$cfda)) #24\nlength(unique(x$cfda_program_num)) #782\n\n```\n\n\n#looking at action type\n\n```{r}\n#most common cfda\n\nhead(arrange(as.data.frame(table(gra16$cfda_program_title)), desc(Freq)))\n\nx <- gra16$cfda_program_title == \"Highway Planning and Construction\"\ndat <- gra16[x,]\n\n#unique(gra16$action_type)\n#A: new assistance\n#B: continuation\n#C: Revision\n#D: Fnd adjustment\n\ndat$act_typ <- substr(dat$action_type, 1, 1) #making it only the first code letter\nhead(arrange(as.data.frame(table(dat$act_typ)), desc(Freq)))\n\n```\n\n\n\n**ASSISSTANCE**\n\n* 1\tunique_transaction_id\tcharacter\n* 16\tfederal_award_id\tcharacter\n\n* 18\tfed_funding_amount\tnumeric\n* 19\tnon_fed_funding_amount\tnumeric\n* 20\ttotal_funding_amount\tnumeric\n\n* 50\tasst_cat_type\tcharacter\n* 24\tassistance_type\tcharacter\n* 25\trecord_type\tinteger             :  Federal Assistance Awards Data System record type: 1 = county aggregate record, 2 = individual action record.\n* 47\tfiscal_year\tinteger\n\n* 23\tending_date\tcharacter\n\n* 28\tprincipal_place_code\tcharacter\n* 29\tprincipal_place_state\tcharacter\n* 30\tprincipal_place_cc\tcharacter\n* 32\tprincipal_place_zip\tcharacter\n* 48\tprincipal_place_state_code\tcharacter\n\n**AGENCY/PROGRAM**\n\n* 52\tmaj_agency_cat\tcharacter\n* 35\tagency_name\tcharacter\n* 4\t  cfda_program_num\tnumeric\n* 34\tcfda_program_title\tcharacter\n* 15\tagency_code\tcharacter\n\n**RECIPIENT**\n\n* 36\tproject_description\tcharacter\n* 7\trecipient_name\tcharacter\n* 13\trecipient_type\tcharacter\n* 49\trecip_cat_type\tcharacter\n\n* 8\trecipient_city_code\tinteger\n* 9\trecipient_city_name\tcharacter\n* 10\trecipient_county_code\tinteger\n* 11\trecipient_county_name\tcharacter\n* 56\trecipient_state_code\tcharacter\n* 12\trecipient_zip\tinteger\n* 42\treceip_addr1\tcharacter\n* 43\treceip_addr2\tcharacter\n* 44\treceip_addr3\tcharacter\n\n* 57\texec1_fullname\tcharacter\n* 58\texec1_amount\tnumeric\n\n#Questions\n\n1. how to work with negatives?\n\n2. when looking at the action type \n\nContinuation (funding in succeeding budget period which stemmed from prior agreement to fund amount of the current action)\"  This means we are double counting money?",
    "created" : 1496328225058.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "494205705",
    "id" : "B666735B",
    "lastKnownWriteTime" : 1496336068,
    "last_content_update" : 1496336068251,
    "path" : "C:/Users/icps/Dropbox/3. Maxwell/4. Capston/Data-Capstone/Ignacio/grantsDF.Rmd",
    "project_path" : "Ignacio/grantsDF.Rmd",
    "properties" : {
        "chunk_output_type" : "console",
        "content_preview_inline" : "false",
        "last_setup_crc32" : "A0E03E6031a1d88f"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}